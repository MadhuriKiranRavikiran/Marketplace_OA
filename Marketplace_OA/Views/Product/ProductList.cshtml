@{
    ViewBag.Title = "ProductList";
    Layout = "~/Views/Shared/_ProductLayout.cshtml";
    var productList = ViewBag.productsVM as List<Marketplace_OA.Models.ProductsVM>;
    var productDetail = ViewBag.productDetailVM as List<Marketplace_OA.Models.ProductAttributeDetailVM>;
    var filterAttribute = ViewBag.filterAttribute as List<Marketplace_OA.Models.AttributesVM>;
}

@Html.Partial("_ProductPartialView")



<div class="">
    <div class="row">

        <div class=" col-lg-3 col-md-4 filter-form">
            <div class="container border" style="padding: 0; border:1px solid #999;">

                <form id="filterForm" class="filter-background">
                    <div class="row mb-3 px-5 align-items-center filter-bordered-section">
                        <div class="col-3">
                            <label class="h5">Search:</label>
                        </div>
                        <div class="col-9 d-flex justify-content-end">
                            <button type="button" id="filterButton" class="btn btn-info mr-5">Save</button>
                            <button type="button" id="clearButton" class="btn btn-info">Clear</button>
                        </div>
                    </div>

                    <div class="filter-bordered-section d-flex justify-content-between align-items-center">
                        <p class="h5 mb-3">Product type</p>
                        <span data-toggle="collapse" href="#productTypeContent" role="button" aria-expanded="false" aria-controls="productTypeContent" class="dropdown-toggle" style="font-size: 1.5rem;"></span>
                    </div>
                    <div class="collapse show filter-bordered-section" id="productTypeContent">

                        @{
                            var modelYearAttribute = filterAttribute.FirstOrDefault(a => a.Attribute_Name == "Model Year");
                            if (modelYearAttribute != null)
                            {
                            }
                            <div class="mb-1 px-5 filter-bordered-section align-items-center">

                                <div class="mb-1 mt-1  d-flex align-items-center">
                                    <label for="ModelYearStart" class="h5 flex-grow-1">Model Year</label>
                                    <input type="hidden" name="Attributes[@modelYearAttribute.AttributesID].CategoriesID" value="@ViewBag.subCategoryId" />
                                    <input type="hidden" name="Attributes[@modelYearAttribute.AttributesID].AttributeId" value="@modelYearAttribute.AttributesID" />
                                    <input type="number" id="ModelYearStart" name="Attributes[@modelYearAttribute.AttributesID].SelectedMinValue" placeholder="" value="" class="form-control form-control-sm mx-2" style="width: 30%;" data-default="@modelYearAttribute.min_value">
                                    <span class="mx-3"> - </span>
                                    <input type="number" id="ModelYearEnd" name="Attributes[@modelYearAttribute.AttributesID].SelectedMaxValue" placeholder="" value="" class="form-control form-control-sm mx-2" style="width: 30%;" data-default="@modelYearAttribute.max_value">
                                </div>
                            </div>
                        }

                        <div class="filter-bordered-section d-flex justify-content-between align-items-center">
                            <p class="h5 mb-2">Tech Specification</p>
                            <span data-toggle="collapse" href="#techSpecificationContent" role="button" aria-expanded="false" aria-controls="techSpecificationContent" class="dropdown-toggle" style="font-size: 1.5rem;"></span>
                        </div>

                        <div class="collapse show" id="techSpecificationContent">

                            @foreach (var attribute in filterAttribute)
                            {
                                //if (attribute.min_value != null && attribute.max_value != null && attribute.Value_Type == "Number")
                                if (attribute.Value_Type == "Number")
                                {
                                    <div class="mb-3 px-5">
                                        <label for="@attribute.AttributesID" class="h6">@attribute.Attribute_Name</label>
                                        <div class="d-flex align-items-center">
                                            <span>@attribute.min_value</span>
                                            <input type="range" id="@attribute.AttributesID" name="Attributes[@attribute.AttributesID].SelectedMaxValue" min="@attribute.min_value" max="@attribute.max_value" value="@(attribute.max_value)" class="mx-2 flex-grow-1 custom-range-slider">
                                            <span class="current-value" data-default="@attribute.max_value">@attribute.max_value</span>
                                            <input type="hidden" name="Attributes[@attribute.AttributesID].AttributeId" value="@attribute.AttributesID" />
                                            <input type="hidden" name="Attributes[@attribute.AttributesID].CategoriesID" value="@ViewBag.subCategoryId" />
                                            <input type="hidden" name="Attributes[@attribute.AttributesID].SelectedMinValue" value="@attribute.min_value" />

                                        </div>
                                    </div>
                                }
                            }
                        </div>

                    </div>

                </form>

            </div>

        </div>

        <div class="col-lg-9 col-md-8">
            <div class="">
                <h3>@ViewBag.mainCategory > @ViewBag.subCategory</h3>
                <div class="card-wrapper row product-list-part">
                    @Html.Partial("_FilteredPartialProductList")

                </div>
                <div>
                    <button class="btn btn-info" id="CheckedProductButton">Compare</button>
                </div>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <!-- jQuery and jQuery UI JS -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <!-- Popper.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script>
        // method for compare box
        document.addEventListener('DOMContentLoaded', function () {
            var compareButton = document.getElementById('CheckedProductButton');
            compareButton.addEventListener('click', function () {
                console.log("click button")
                var checkedProductId = [];
                var checkedbox = document.querySelectorAll('.CheckedProduct:checked');
                checkedbox.forEach(function (box) {
                    checkedProductId.push(box.value);
                });
                if (checkedProductId.length == 0) {
                    alert('Select one or more to compare');
                    return;
                }

                window.location.assign('/Product/ProductCompare?ids=' + checkedProductId.join(','));

            });
        });

        // show the current range value
        $(document).ready(function () {

            $('input[type="range"]').on('input', function () {

                $(this).next('.current-value').text($(this).val());
            });
        });

        //ajax for send filter attribute to controller

        $(document).ready(function () {
            $('#filterButton').on('click', function (e) {
                e.preventDefault();

                // Check if the model year inputs are empty and set default values
                if (!$("#ModelYearStart").val()) {
                    $("#ModelYearStart").val($("#ModelYearStart").data("default"));
                    var ModelYearStartEntered = false;
                } else {
                    var ModelYearStartEntered = true;
                }
                if (!$("#ModelYearEnd").val()) {
                    $("#ModelYearEnd").val($("#ModelYearEnd").data("default"));
                    var ModelYearEndEntered = false;
                } else {
                    var ModelYearEndEntered = true;
                }


                // an array to store all the attributes
                var attributes = [];
                var mainCategory = '@ViewBag.mainCategory';
                var subCategory = '@ViewBag.subCategory';

                $('input[type=range]').each(function () {
                    var attributeId = $(this).attr('id');
                    var CategoriesID = $(`input[name="Attributes[${attributeId}].CategoriesID"]`).val();
                    var selectedMinValue = $(`input[name="Attributes[${attributeId}].SelectedMinValue"]`).val();
                    var selectedMaxValue = $(this).val();

                    attributes.push({
                        AttributeId: parseInt(attributeId),
                        CategoriesID: parseInt(CategoriesID),
                        SelectedMinValue: parseInt(selectedMinValue),
                        SelectedMaxValue: parseInt(selectedMaxValue)
                    });
                });
                // for model year
                $('input[type=number]').each(function () {
                    var attributeId = $(this).siblings('input[name$="AttributeId"]').val();
                    var CategoriesID = $(this).siblings('input[name$="CategoriesID"]').val();
                    var selectedMinValue, selectedMaxValue;

                    if ($(this).attr('id').endsWith('Start')) {
                        selectedMinValue = $(this).val();
                        selectedMaxValue = $(this).siblings('input[type=number]').val();

                        attributes.push({
                            AttributeId: parseInt(attributeId),
                            CategoriesID: parseInt(CategoriesID),
                            SelectedMinValue: parseInt(selectedMinValue),
                            SelectedMaxValue: parseInt(selectedMaxValue)
                        });
                    }
                });

                // Convert data into a JSON string
                var jsonData = JSON.stringify({
                    Attributes: attributes,
                    MainCategory: mainCategory,
                    SubCategory: subCategory
                });

                // keep the model year input firstly
                var modelYearStartVal = $("#ModelYearStart").val();
                var modelYearEndVal = $("#ModelYearEnd").val();

                $.ajax({
                    url: '/Product/HandleFilter',
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: jsonData,
                    success: function (response) {
                        console.log(response);
                        // Replace the product list part with the new data
                        $('.product-list-part').html(response);

                        // Clear the Model Year inputs after updating the partial view
                        if (!ModelYearStartEntered) {
                            $("#ModelYearStart").val("");
                        } else {
                            $("#ModelYearStart").val(modelYearStartVal);
                        }
                        if (!ModelYearEndEntered) {
                            $("#ModelYearEnd").val("");
                        } else {
                            $("#ModelYearEnd").val(modelYearEndVal);
                        }

                    },
                    error: function () {
                        alert('There was an error processing your request.');
                    }
                });
            });
        });

         // method for clear
        $(document).ready(function () {

            $('#clearButton').on('click', function (e) {
                e.preventDefault();

                // just clear model year input
                $('input[type=number]').val("");

                // Reset each range input to its default value
                $('input[type=range]').each(function () {
                    var defaultValue = $(this).attr('value');
                    $(this).val(defaultValue);
                });

                $('.current-value').each(function () {
                    var defaultValueSpan = $(this).data('default');
                    $(this).text(defaultValueSpan);
                })

                //// Reset "Model Year" inputs
                //$('input[type=number]').val(function () {
                //    $(this).val($(this).attr('value'));
                //});

                // Call the controller function via AJAX
                var mainCategory = '@ViewBag.mainCategory';
                var subCategory = '@ViewBag.subCategory';
                var subCategoryId = '@ViewBag.subCategoryId';

                $.ajax({
                    url: '/Product/HandleClear',
                    type: 'POST',
                    data: {
                        mainCategory: mainCategory,
                        subCategory: subCategory,
                        subCategoryId: subCategoryId
                    },
                    success: function (response) {

                        $('.product-list-part').html(response);
                    },
                    error: function () {
                        alert('There was an error processing your request.');
                    }
                });
            });

        });
    </script>
}